//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SoftExpert.com.softexpert.tecfy.gn {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GenericBinding", Namespace="urn:generic")]
    public partial class Generic : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addAreaToTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserFromTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPositionToTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserToTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTeamByAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTeamByPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTeamByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTeamByAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTeamByPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTeamByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAreaFromTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback removePositionFromTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback newTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback newTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTeamMemberOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Generic() {
            this.Url = global::SoftExpert.Properties.Settings.Default.SoftExpert_com_softexpert_tecfy_gn_Generic;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addAreaToTeamCompletedEventHandler addAreaToTeamCompleted;
        
        /// <remarks/>
        public event removeUserFromTeamCompletedEventHandler removeUserFromTeamCompleted;
        
        /// <remarks/>
        public event addPositionToTeamCompletedEventHandler addPositionToTeamCompleted;
        
        /// <remarks/>
        public event addUserToTeamCompletedEventHandler addUserToTeamCompleted;
        
        /// <remarks/>
        public event createTeamByAreaCompletedEventHandler createTeamByAreaCompleted;
        
        /// <remarks/>
        public event createTeamByPositionCompletedEventHandler createTeamByPositionCompleted;
        
        /// <remarks/>
        public event createTeamByUserCompletedEventHandler createTeamByUserCompleted;
        
        /// <remarks/>
        public event editTeamByAreaCompletedEventHandler editTeamByAreaCompleted;
        
        /// <remarks/>
        public event editTeamByPositionCompletedEventHandler editTeamByPositionCompleted;
        
        /// <remarks/>
        public event editTeamByUserCompletedEventHandler editTeamByUserCompleted;
        
        /// <remarks/>
        public event removeAreaFromTeamCompletedEventHandler removeAreaFromTeamCompleted;
        
        /// <remarks/>
        public event removePositionFromTeamCompletedEventHandler removePositionFromTeamCompleted;
        
        /// <remarks/>
        public event removeTeamCompletedEventHandler removeTeamCompleted;
        
        /// <remarks/>
        public event newTeamCompletedEventHandler newTeamCompleted;
        
        /// <remarks/>
        public event newTeamMemberCompletedEventHandler newTeamMemberCompleted;
        
        /// <remarks/>
        public event deleteTeamMemberCompletedEventHandler deleteTeamMemberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#addAreaToTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int addAreaToTeam(string IDTEAM, string AREAS) {
            object[] results = this.Invoke("addAreaToTeam", new object[] {
                        IDTEAM,
                        AREAS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addAreaToTeamAsync(string IDTEAM, string AREAS) {
            this.addAreaToTeamAsync(IDTEAM, AREAS, null);
        }
        
        /// <remarks/>
        public void addAreaToTeamAsync(string IDTEAM, string AREAS, object userState) {
            if ((this.addAreaToTeamOperationCompleted == null)) {
                this.addAreaToTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAreaToTeamOperationCompleted);
            }
            this.InvokeAsync("addAreaToTeam", new object[] {
                        IDTEAM,
                        AREAS}, this.addAreaToTeamOperationCompleted, userState);
        }
        
        private void OnaddAreaToTeamOperationCompleted(object arg) {
            if ((this.addAreaToTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAreaToTeamCompleted(this, new addAreaToTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#removeUserFromTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int removeUserFromTeam(string IDTEAM, string USERS, out string Status, out string Detail, out int Code, out string RecordKey, out string RecordId) {
            object[] results = this.Invoke("removeUserFromTeam", new object[] {
                        IDTEAM,
                        USERS});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            RecordKey = ((string)(results[4]));
            RecordId = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removeUserFromTeamAsync(string IDTEAM, string USERS) {
            this.removeUserFromTeamAsync(IDTEAM, USERS, null);
        }
        
        /// <remarks/>
        public void removeUserFromTeamAsync(string IDTEAM, string USERS, object userState) {
            if ((this.removeUserFromTeamOperationCompleted == null)) {
                this.removeUserFromTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserFromTeamOperationCompleted);
            }
            this.InvokeAsync("removeUserFromTeam", new object[] {
                        IDTEAM,
                        USERS}, this.removeUserFromTeamOperationCompleted, userState);
        }
        
        private void OnremoveUserFromTeamOperationCompleted(object arg) {
            if ((this.removeUserFromTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserFromTeamCompleted(this, new removeUserFromTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#addPositionToTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int addPositionToTeam(string IDTEAM, string POSITIONS) {
            object[] results = this.Invoke("addPositionToTeam", new object[] {
                        IDTEAM,
                        POSITIONS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addPositionToTeamAsync(string IDTEAM, string POSITIONS) {
            this.addPositionToTeamAsync(IDTEAM, POSITIONS, null);
        }
        
        /// <remarks/>
        public void addPositionToTeamAsync(string IDTEAM, string POSITIONS, object userState) {
            if ((this.addPositionToTeamOperationCompleted == null)) {
                this.addPositionToTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPositionToTeamOperationCompleted);
            }
            this.InvokeAsync("addPositionToTeam", new object[] {
                        IDTEAM,
                        POSITIONS}, this.addPositionToTeamOperationCompleted, userState);
        }
        
        private void OnaddPositionToTeamOperationCompleted(object arg) {
            if ((this.addPositionToTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPositionToTeamCompleted(this, new addPositionToTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#addUserToTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int addUserToTeam(string IDTEAM, string USERS) {
            object[] results = this.Invoke("addUserToTeam", new object[] {
                        IDTEAM,
                        USERS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addUserToTeamAsync(string IDTEAM, string USERS) {
            this.addUserToTeamAsync(IDTEAM, USERS, null);
        }
        
        /// <remarks/>
        public void addUserToTeamAsync(string IDTEAM, string USERS, object userState) {
            if ((this.addUserToTeamOperationCompleted == null)) {
                this.addUserToTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserToTeamOperationCompleted);
            }
            this.InvokeAsync("addUserToTeam", new object[] {
                        IDTEAM,
                        USERS}, this.addUserToTeamOperationCompleted, userState);
        }
        
        private void OnaddUserToTeamOperationCompleted(object arg) {
            if ((this.addUserToTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserToTeamCompleted(this, new addUserToTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#createTeamByArea", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int createTeamByArea(string IDTEAM, string NMTEAM, string AREAS, string COMPONENT) {
            object[] results = this.Invoke("createTeamByArea", new object[] {
                        IDTEAM,
                        NMTEAM,
                        AREAS,
                        COMPONENT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createTeamByAreaAsync(string IDTEAM, string NMTEAM, string AREAS, string COMPONENT) {
            this.createTeamByAreaAsync(IDTEAM, NMTEAM, AREAS, COMPONENT, null);
        }
        
        /// <remarks/>
        public void createTeamByAreaAsync(string IDTEAM, string NMTEAM, string AREAS, string COMPONENT, object userState) {
            if ((this.createTeamByAreaOperationCompleted == null)) {
                this.createTeamByAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTeamByAreaOperationCompleted);
            }
            this.InvokeAsync("createTeamByArea", new object[] {
                        IDTEAM,
                        NMTEAM,
                        AREAS,
                        COMPONENT}, this.createTeamByAreaOperationCompleted, userState);
        }
        
        private void OncreateTeamByAreaOperationCompleted(object arg) {
            if ((this.createTeamByAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTeamByAreaCompleted(this, new createTeamByAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#createTeamByPosition", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int createTeamByPosition(string IDTEAM, string NMTEAM, string POSITIONS, string COMPONENT) {
            object[] results = this.Invoke("createTeamByPosition", new object[] {
                        IDTEAM,
                        NMTEAM,
                        POSITIONS,
                        COMPONENT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createTeamByPositionAsync(string IDTEAM, string NMTEAM, string POSITIONS, string COMPONENT) {
            this.createTeamByPositionAsync(IDTEAM, NMTEAM, POSITIONS, COMPONENT, null);
        }
        
        /// <remarks/>
        public void createTeamByPositionAsync(string IDTEAM, string NMTEAM, string POSITIONS, string COMPONENT, object userState) {
            if ((this.createTeamByPositionOperationCompleted == null)) {
                this.createTeamByPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTeamByPositionOperationCompleted);
            }
            this.InvokeAsync("createTeamByPosition", new object[] {
                        IDTEAM,
                        NMTEAM,
                        POSITIONS,
                        COMPONENT}, this.createTeamByPositionOperationCompleted, userState);
        }
        
        private void OncreateTeamByPositionOperationCompleted(object arg) {
            if ((this.createTeamByPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTeamByPositionCompleted(this, new createTeamByPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#createTeamByUser", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int createTeamByUser(string IDTEAM, string NMTEAM, string USERS, string COMPONENT) {
            object[] results = this.Invoke("createTeamByUser", new object[] {
                        IDTEAM,
                        NMTEAM,
                        USERS,
                        COMPONENT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createTeamByUserAsync(string IDTEAM, string NMTEAM, string USERS, string COMPONENT) {
            this.createTeamByUserAsync(IDTEAM, NMTEAM, USERS, COMPONENT, null);
        }
        
        /// <remarks/>
        public void createTeamByUserAsync(string IDTEAM, string NMTEAM, string USERS, string COMPONENT, object userState) {
            if ((this.createTeamByUserOperationCompleted == null)) {
                this.createTeamByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTeamByUserOperationCompleted);
            }
            this.InvokeAsync("createTeamByUser", new object[] {
                        IDTEAM,
                        NMTEAM,
                        USERS,
                        COMPONENT}, this.createTeamByUserOperationCompleted, userState);
        }
        
        private void OncreateTeamByUserOperationCompleted(object arg) {
            if ((this.createTeamByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTeamByUserCompleted(this, new createTeamByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#editTeamByArea", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editTeamByArea(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string AREAS, string COMPONENT) {
            object[] results = this.Invoke("editTeamByArea", new object[] {
                        IDTEAM_OLD,
                        IDTEAM_NEW,
                        NMTEAM,
                        AREAS,
                        COMPONENT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editTeamByAreaAsync(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string AREAS, string COMPONENT) {
            this.editTeamByAreaAsync(IDTEAM_OLD, IDTEAM_NEW, NMTEAM, AREAS, COMPONENT, null);
        }
        
        /// <remarks/>
        public void editTeamByAreaAsync(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string AREAS, string COMPONENT, object userState) {
            if ((this.editTeamByAreaOperationCompleted == null)) {
                this.editTeamByAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTeamByAreaOperationCompleted);
            }
            this.InvokeAsync("editTeamByArea", new object[] {
                        IDTEAM_OLD,
                        IDTEAM_NEW,
                        NMTEAM,
                        AREAS,
                        COMPONENT}, this.editTeamByAreaOperationCompleted, userState);
        }
        
        private void OneditTeamByAreaOperationCompleted(object arg) {
            if ((this.editTeamByAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTeamByAreaCompleted(this, new editTeamByAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#editTeamByPosition", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editTeamByPosition(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string POSITIONS, string COMPONENT) {
            object[] results = this.Invoke("editTeamByPosition", new object[] {
                        IDTEAM_OLD,
                        IDTEAM_NEW,
                        NMTEAM,
                        POSITIONS,
                        COMPONENT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editTeamByPositionAsync(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string POSITIONS, string COMPONENT) {
            this.editTeamByPositionAsync(IDTEAM_OLD, IDTEAM_NEW, NMTEAM, POSITIONS, COMPONENT, null);
        }
        
        /// <remarks/>
        public void editTeamByPositionAsync(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string POSITIONS, string COMPONENT, object userState) {
            if ((this.editTeamByPositionOperationCompleted == null)) {
                this.editTeamByPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTeamByPositionOperationCompleted);
            }
            this.InvokeAsync("editTeamByPosition", new object[] {
                        IDTEAM_OLD,
                        IDTEAM_NEW,
                        NMTEAM,
                        POSITIONS,
                        COMPONENT}, this.editTeamByPositionOperationCompleted, userState);
        }
        
        private void OneditTeamByPositionOperationCompleted(object arg) {
            if ((this.editTeamByPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTeamByPositionCompleted(this, new editTeamByPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#editTeamByUser", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editTeamByUser(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string USERS, string COMPONENT) {
            object[] results = this.Invoke("editTeamByUser", new object[] {
                        IDTEAM_OLD,
                        IDTEAM_NEW,
                        NMTEAM,
                        USERS,
                        COMPONENT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editTeamByUserAsync(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string USERS, string COMPONENT) {
            this.editTeamByUserAsync(IDTEAM_OLD, IDTEAM_NEW, NMTEAM, USERS, COMPONENT, null);
        }
        
        /// <remarks/>
        public void editTeamByUserAsync(string IDTEAM_OLD, string IDTEAM_NEW, string NMTEAM, string USERS, string COMPONENT, object userState) {
            if ((this.editTeamByUserOperationCompleted == null)) {
                this.editTeamByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTeamByUserOperationCompleted);
            }
            this.InvokeAsync("editTeamByUser", new object[] {
                        IDTEAM_OLD,
                        IDTEAM_NEW,
                        NMTEAM,
                        USERS,
                        COMPONENT}, this.editTeamByUserOperationCompleted, userState);
        }
        
        private void OneditTeamByUserOperationCompleted(object arg) {
            if ((this.editTeamByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTeamByUserCompleted(this, new editTeamByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#removeAreaFromTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int removeAreaFromTeam(string IDTEAM, string AREAS) {
            object[] results = this.Invoke("removeAreaFromTeam", new object[] {
                        IDTEAM,
                        AREAS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removeAreaFromTeamAsync(string IDTEAM, string AREAS) {
            this.removeAreaFromTeamAsync(IDTEAM, AREAS, null);
        }
        
        /// <remarks/>
        public void removeAreaFromTeamAsync(string IDTEAM, string AREAS, object userState) {
            if ((this.removeAreaFromTeamOperationCompleted == null)) {
                this.removeAreaFromTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAreaFromTeamOperationCompleted);
            }
            this.InvokeAsync("removeAreaFromTeam", new object[] {
                        IDTEAM,
                        AREAS}, this.removeAreaFromTeamOperationCompleted, userState);
        }
        
        private void OnremoveAreaFromTeamOperationCompleted(object arg) {
            if ((this.removeAreaFromTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAreaFromTeamCompleted(this, new removeAreaFromTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#removePositionFromTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int removePositionFromTeam(string IDTEAM, string POSITIONS) {
            object[] results = this.Invoke("removePositionFromTeam", new object[] {
                        IDTEAM,
                        POSITIONS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removePositionFromTeamAsync(string IDTEAM, string POSITIONS) {
            this.removePositionFromTeamAsync(IDTEAM, POSITIONS, null);
        }
        
        /// <remarks/>
        public void removePositionFromTeamAsync(string IDTEAM, string POSITIONS, object userState) {
            if ((this.removePositionFromTeamOperationCompleted == null)) {
                this.removePositionFromTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePositionFromTeamOperationCompleted);
            }
            this.InvokeAsync("removePositionFromTeam", new object[] {
                        IDTEAM,
                        POSITIONS}, this.removePositionFromTeamOperationCompleted, userState);
        }
        
        private void OnremovePositionFromTeamOperationCompleted(object arg) {
            if ((this.removePositionFromTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePositionFromTeamCompleted(this, new removePositionFromTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#removeTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int removeTeam(string IDTEAM) {
            object[] results = this.Invoke("removeTeam", new object[] {
                        IDTEAM});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removeTeamAsync(string IDTEAM) {
            this.removeTeamAsync(IDTEAM, null);
        }
        
        /// <remarks/>
        public void removeTeamAsync(string IDTEAM, object userState) {
            if ((this.removeTeamOperationCompleted == null)) {
                this.removeTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveTeamOperationCompleted);
            }
            this.InvokeAsync("removeTeam", new object[] {
                        IDTEAM}, this.removeTeamOperationCompleted, userState);
        }
        
        private void OnremoveTeamOperationCompleted(object arg) {
            if ((this.removeTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeTeamCompleted(this, new removeTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#newTeam", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string newTeam(string IDTEAM, string NMTEAM, string COMPONENT, out long Code, out string Detail, out string RecordID) {
            object[] results = this.Invoke("newTeam", new object[] {
                        IDTEAM,
                        NMTEAM,
                        COMPONENT});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            RecordID = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newTeamAsync(string IDTEAM, string NMTEAM, string COMPONENT) {
            this.newTeamAsync(IDTEAM, NMTEAM, COMPONENT, null);
        }
        
        /// <remarks/>
        public void newTeamAsync(string IDTEAM, string NMTEAM, string COMPONENT, object userState) {
            if ((this.newTeamOperationCompleted == null)) {
                this.newTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewTeamOperationCompleted);
            }
            this.InvokeAsync("newTeam", new object[] {
                        IDTEAM,
                        NMTEAM,
                        COMPONENT}, this.newTeamOperationCompleted, userState);
        }
        
        private void OnnewTeamOperationCompleted(object arg) {
            if ((this.newTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newTeamCompleted(this, new newTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#newTeamMember", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string newTeamMember(string IDTEAM, string FGTYPE, string IDDEPARTMENT, string SUBLEVELS, string IDPOSITION, string IDUSER, out long Code, out string Detail, out string RecordID) {
            object[] results = this.Invoke("newTeamMember", new object[] {
                        IDTEAM,
                        FGTYPE,
                        IDDEPARTMENT,
                        SUBLEVELS,
                        IDPOSITION,
                        IDUSER});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            RecordID = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newTeamMemberAsync(string IDTEAM, string FGTYPE, string IDDEPARTMENT, string SUBLEVELS, string IDPOSITION, string IDUSER) {
            this.newTeamMemberAsync(IDTEAM, FGTYPE, IDDEPARTMENT, SUBLEVELS, IDPOSITION, IDUSER, null);
        }
        
        /// <remarks/>
        public void newTeamMemberAsync(string IDTEAM, string FGTYPE, string IDDEPARTMENT, string SUBLEVELS, string IDPOSITION, string IDUSER, object userState) {
            if ((this.newTeamMemberOperationCompleted == null)) {
                this.newTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewTeamMemberOperationCompleted);
            }
            this.InvokeAsync("newTeamMember", new object[] {
                        IDTEAM,
                        FGTYPE,
                        IDDEPARTMENT,
                        SUBLEVELS,
                        IDPOSITION,
                        IDUSER}, this.newTeamMemberOperationCompleted, userState);
        }
        
        private void OnnewTeamMemberOperationCompleted(object arg) {
            if ((this.newTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newTeamMemberCompleted(this, new newTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:generic#deleteTeamMember", RequestNamespace="urn:generic", ResponseNamespace="urn:generic", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string deleteTeamMember(string IDTEAM, string FGTYPE, string IDDEPARTMENT, string IDPOSITION, string IDUSER, out long Code, out string Detail) {
            object[] results = this.Invoke("deleteTeamMember", new object[] {
                        IDTEAM,
                        FGTYPE,
                        IDDEPARTMENT,
                        IDPOSITION,
                        IDUSER});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTeamMemberAsync(string IDTEAM, string FGTYPE, string IDDEPARTMENT, string IDPOSITION, string IDUSER) {
            this.deleteTeamMemberAsync(IDTEAM, FGTYPE, IDDEPARTMENT, IDPOSITION, IDUSER, null);
        }
        
        /// <remarks/>
        public void deleteTeamMemberAsync(string IDTEAM, string FGTYPE, string IDDEPARTMENT, string IDPOSITION, string IDUSER, object userState) {
            if ((this.deleteTeamMemberOperationCompleted == null)) {
                this.deleteTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTeamMemberOperationCompleted);
            }
            this.InvokeAsync("deleteTeamMember", new object[] {
                        IDTEAM,
                        FGTYPE,
                        IDDEPARTMENT,
                        IDPOSITION,
                        IDUSER}, this.deleteTeamMemberOperationCompleted, userState);
        }
        
        private void OndeleteTeamMemberOperationCompleted(object arg) {
            if ((this.deleteTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTeamMemberCompleted(this, new deleteTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addAreaToTeamCompletedEventHandler(object sender, addAreaToTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAreaToTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAreaToTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removeUserFromTeamCompletedEventHandler(object sender, removeUserFromTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeUserFromTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeUserFromTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RecordKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string RecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addPositionToTeamCompletedEventHandler(object sender, addPositionToTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPositionToTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPositionToTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addUserToTeamCompletedEventHandler(object sender, addUserToTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserToTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserToTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createTeamByAreaCompletedEventHandler(object sender, createTeamByAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTeamByAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTeamByAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createTeamByPositionCompletedEventHandler(object sender, createTeamByPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTeamByPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTeamByPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createTeamByUserCompletedEventHandler(object sender, createTeamByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTeamByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTeamByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void editTeamByAreaCompletedEventHandler(object sender, editTeamByAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTeamByAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTeamByAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void editTeamByPositionCompletedEventHandler(object sender, editTeamByPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTeamByPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTeamByPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void editTeamByUserCompletedEventHandler(object sender, editTeamByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTeamByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTeamByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removeAreaFromTeamCompletedEventHandler(object sender, removeAreaFromTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeAreaFromTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeAreaFromTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removePositionFromTeamCompletedEventHandler(object sender, removePositionFromTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removePositionFromTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removePositionFromTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removeTeamCompletedEventHandler(object sender, removeTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void newTeamCompletedEventHandler(object sender, newTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RecordID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void newTeamMemberCompletedEventHandler(object sender, newTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RecordID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteTeamMemberCompletedEventHandler(object sender, deleteTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591